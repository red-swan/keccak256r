// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// keccak256_string
std::string keccak256_string(std::string input);
RcppExport SEXP _keccak256r_keccak256_string(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(keccak256_string(input));
    return rcpp_result_gen;
END_RCPP
}
// keccak256_raw
std::string keccak256_raw(RawVector input);
RcppExport SEXP _keccak256r_keccak256_raw(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(keccak256_raw(input));
    return rcpp_result_gen;
END_RCPP
}
// keccak256_file
std::string keccak256_file(std::string filepath);
RcppExport SEXP _keccak256r_keccak256_file(SEXP filepathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filepath(filepathSEXP);
    rcpp_result_gen = Rcpp::wrap(keccak256_file(filepath));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_keccak256r_keccak256_string", (DL_FUNC) &_keccak256r_keccak256_string, 1},
    {"_keccak256r_keccak256_raw", (DL_FUNC) &_keccak256r_keccak256_raw, 1},
    {"_keccak256r_keccak256_file", (DL_FUNC) &_keccak256r_keccak256_file, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_keccak256r(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
